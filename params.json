{"name":"Pafy","tagline":"Python API for YouTube - Download videos and retrieve metadata from YouTube","body":"PAFY\r\n====\r\n\r\nPython API for YouTube\r\nby nagev\r\n\r\n\r\nFeatures:\r\n---------\r\n\r\n - Retreive metadata such as viewcount, duration, rating, author, thumbnail, keywords\r\n - Download video or audio at requested resolution / bitrate / format / filesize\r\n - Command line tool (ytdl) for downloading directly from the command line\r\n - Retrieve the URL to stream the video in a player such as vlc or mplayer\r\n - Works with age-restricted videos and non-embeddable videos\r\n - Small, standalone, single importable module file (pafy.py)\r\n - Select highest quality stream for download or streaming\r\n - Download audio only (no video) in ogg or m4a format\r\n - Download video only (no audio) in m4v format\r\n - Works with Python 2.7 and 3.x\r\n - No dependencies\r\n\r\n\r\nUsage Examples:\r\n---------------\r\n\r\nHere is how to use the module in your own python code.  For command line tool\r\n(ytdl) instructions, see further below:\r\n\r\n```python\r\n\r\n>>> import pafy\r\n\r\n\r\n    # create a video instance from a YouTube video url\r\n    \r\n>>> url = \"http://www.youtube.com/watch?v=cyMHZVT91Dw\"\r\n>>> video = pafy.new(url)\r\n\r\n\r\n    # get certain attributes\r\n    \r\n>>> video.title\r\nu'Rick Astley Sings Live - Never Gonna Give You Up - This Morning'\r\n\r\n\r\n>>> video.rating\r\n4.93608852755\r\n\r\n>>> video.length\r\n355\r\n\r\n    # display video metadata\r\n    \r\n>>> print video\r\nTitle: Rick Astley Sings Live - Never Gonna Give You Up - This Morning\r\nAuthor: Ryan915\r\nID: cyMHZVT91Dw\r\nDuration: 00:05:55\r\nRating: 4.93608852755\r\nViews: 672583\r\nThumbnail: https://i1.ytimg.com/vi/cyMHZVT91Dw/default.jpg\r\nKeywords: Rick, Astley, Sings, Live, on, This, Morning, Never, Gonna, Gunna, Give, You,...\r\n\r\n\r\n    # show regular formats for a video (video files with audio):\r\n    \r\n>>> streams = video.streams\r\n>>> for s in streams:\r\n>>>     print s.resolution, s.extension\r\n\r\n480x854 webm\r\n480x854 flv\r\n360x640 webm\r\n360x640 flv\r\n360x640 mp4\r\n240x400 flv\r\n320x240 3gp\r\n144x176 3gp\r\n\r\n\r\n    # show all formats, file-sizes and their download url:\r\n\r\n>>> for s in streams:\r\n>>>     print s.resolution, s.extension, s.get_filesize(), s.url\r\n\r\n480x854 webm 56858674 http://r12--sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n480x854 flv 53066081 http://r11---sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n360x640 webm 34775366 http://r11---sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n360x640 flv 32737100 http://r11---sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n360x640 mp4 25919932 http://r11---sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n240x400 flv 14341366 http://r11---sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n320x240 3gp 11083585 http://r11---sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n144x176 3gp 3891135 http://r11---sn-aoh8kier.c.youtube.com/videoplayback?expire=1369...\r\n\r\n\r\n    # get best resolution regardless of file format:\r\n    \r\n>>> best = video.getbest()\r\n>>> best.resolution, best.extension\r\n('480x854', 'webm')\r\n\r\n\r\n    # get best resolution for a particular file format:\r\n    # (mp4, webm, flv or 3gp)\r\n    \r\n>>> best = video.getbest(preftype=\"mp4\")\r\n>>> best.resolution, best.extension\r\n('360x640', 'mp4')\r\n\r\n\r\n    # get best resolution for a particular file format, or return\r\n    # a different format if it has the best resolution\r\n    \r\n>>> best = video.getbest(preftype=\"mp4\", ftypestrict=False)\r\n>>> best.resolution, best.extension\r\n('480x854', 'webm')\r\n\r\n\r\n    # get url, for download or streaming in mplayer / vlc etc\r\n    \r\n>>> best.url\r\n'http://r12---sn-aig7kner.c.youtube.com/videoplayback?expire=1369...\r\n\r\n\r\n    # Download video and show progress:\r\n    \r\n>>> best.download(quiet=False)\r\n-Downloading 'Rick Astley Sings Live - Never Gonna Give You Up - This Morning.webm' [56,858,674 Bytes]\r\n  56,858,674 Bytes [100.00%] received. Rate: [ 720 kbps].  ETA: [0 secs]    \r\nDone\r\n\r\n\r\n    # Download video, use specific filepath:\r\n    \r\n>>> myfilename = \"/tmp/\" + best.title + \".\" + best.extension\r\n>>> best.download(filepath=myfilename)\r\n-Downloading 'Rick Astley Sings Live - Never Gonna Give You Up - This Morning.webm' [56,858,674 Bytes]\r\nDone\r\n\r\n\r\n    # Get audio-only streams (m4a and/or ogg vorbis)\r\n    # (use video.videostreams to get video-only streams)\r\n\r\n>>> audiostreams = video.audiostreams\r\n>>> for a in audiostreams:\r\n>>>     print(a.quality, a.extension, a.get_filesize())\r\n('48k', 'm4a', 2109164)\r\n('128k', 'm4a', 5630839)\r\n('256k', 'm4a', 11302824)\r\n\r\n\r\n    # Download the 3rd audio stream from the above list\r\n\r\n>>> audiostreams[2].download()\r\n\r\n\r\n    # Get the best quality audio stream\r\n\r\n>>> bestaudio = video.getbestaudio()\r\n>>> bestaudio.bitrate\r\n'256k'\r\n\r\n\r\n    # Download the best quality audio file\r\n\r\n>>> bestaudio.download()\r\n\r\n\r\n    # show ALL formats for a video (video+audio, video-only and audio-only)\r\n\r\n>>> allstreams = video.allstreams\r\n>>> for s in allstreams:\r\n>>>     print(s.quality, s.extension, s.mediatype)\r\n\r\n('1280x720', 'mp4', 'a/v')\r\n('640x360', 'webm', 'a/v')\r\n('640x360', 'mp4', 'a/v')\r\n('320x240', 'flv', 'a/v')\r\n('320x240', '3gp', 'a/v')\r\n('176x144', '3gp', 'a/v')\r\n('1920x1080', 'm4v', 'video')\r\n('1280x720', 'm4v', 'video')\r\n('854x480', 'm4v', 'video')\r\n('640x360', 'm4v', 'video')\r\n('426x240', 'm4v', 'video')\r\n('256x144', 'm4v', 'video')\r\n('48k', 'm4a', 'audio')\r\n('128k', 'm4a', 'audio')\r\n('256k', 'm4a', 'audio')\r\n('128k', 'ogg', 'audio')\r\n('256k', 'ogg', 'audio')\r\n\r\n```\r\n\r\n\r\nCommand Line Tool (ytdl) Usage:\r\n===============================\r\n\r\n```\r\n\r\nusage: ytdl [-h] [-i] [-s] [-f {webm,mp4,3gp,flv,m4v,m4a,ogg}]\r\n            [-q {NNN}x{NNN} | {NNN}k] [-n N] [-b]\r\n            url\r\n\r\npositional arguments:\r\n  url                   YouTube video URL to download\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i                    Display vid info\r\n  -s                    Display available streams\r\n  -n N                  Specify stream to download by stream number (use -s to\r\n                        list, ignores -f and -q)\r\n  -b                    Download the best quality video (ignores -n, -f and -q)\r\n\r\nformat and quality:\r\n  Specify the stream to download by quality (ie. resolution or bitrate) and\r\n  file format\r\n\r\n  -f {webm,mp4,3gp,flv,m4v,m4a,ogg}\r\n                        format of the file to download\r\n  -q {NNN}x{NNN} | {NNN}k\r\n                        quality of the file to download\r\n\r\n\r\n\r\nExamples:\r\n\r\n# Download best available resolution (-b):\r\n\r\n    ytdl \"http://www.youtube.com/watch?v=cyMHZVT91Dw\" -b\r\n\r\n# get video info (-i):\r\n\r\n    ytdl \"http://www.youtube.com/watch?v=cyMHZVT91Dw\" -i\r\n\r\n# list available download formats (-s):\r\n\r\n    ytdl \"http://www.youtube.com/watch?v=cyMHZVT91Dw\" -s\r\n \r\n\r\n    Stream Type    Format Quality          Size     \r\n    ------ ----    ------ -------          ----     \r\n    1      a/v     webm   [640x360]        33 MB    \r\n    2      a/v     mp4    [640x360]        24 MB    \r\n    3      a/v     flv    [320x240]        13 MB    \r\n    4      a/v     3gp    [320x240]        10 MB    \r\n    5      a/v     3gp    [176x144]         3 MB    \r\n    6      video   m4v    [854x480]        39 MB    \r\n    7      video   m4v    [640x360]        17 MB    \r\n    8      video   m4v    [426x240]        11 MB    \r\n    9      video   m4v    [256x144]         4 MB    \r\n    10     audio   m4a    [48k]             2 MB    \r\n    11     audio   m4a    [128k]            5 MB    \r\n    12     audio   m4a    [256k]           10 MB \r\n\r\n \r\n# Download mp4 640x360 (ie. stream number 2)\r\n\r\n    ytdl \"http://www.youtube.com/watch?v=cyMHZVT91Dw\" -n 2\r\n\r\n\r\n# Download flv at 320x240 \r\n\r\n    ytdl \"youtube.com/watch?v=cyMHZVT91Dw\" -f flv -q 320x240 \r\n\r\n```\r\n\r\n\r\n","google":"UA-41778544-1","note":"Don't delete this file! It's used internally to help with page regeneration."}